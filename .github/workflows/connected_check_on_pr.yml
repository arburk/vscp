name: Instrumented Tests

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - 'main'


jobs:
  build:
    runs-on: ubuntu-latest # https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2204-Readme.md
    timeout-minutes: 60
    strategy:
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast: false
      matrix:
        api-level: [ 27, 28, 29, 30, 31, 32, 33, 34 ]
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g

    steps:
      - name: checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3

      - name: Enable KVM group perms
        # https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/
        # Starting on February 23, 2023, Actions users of GitHub-hosted larger Linux runners will be able to make use of hardware acceleration for Android testing
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Determine emulator target
        id: determine-target
        run: |
          TARGET="google_apis"
          if [[ ${{ matrix.api-level }} -ge 30 ]]; then
            TARGET="aosp_atd"
          elif [[ ${{ matrix.api-level }} -le 27 ]]; then
            TARGET="default"
          fi
          echo "TARGET=$TARGET" >> "$GITHUB_OUTPUT"

## Disable cache since it breaks the tests
#      - name: AVD cache
#        if: steps.check_pr.outputs.PERFORM_TEST != 0
#        uses: actions/cache@v4
#        id: avd-cache
#        with:
#          path: |
#            ~/.android/avd/*
#            ~/.android/adb*
#          key: avd-ubuntu-${{ matrix.api-level }}

      - name: Perform instrumented tests  # see https://github.com/marketplace/actions/android-emulator-runner
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ steps.determine-target.outputs.TARGET }}
          arch: x86_64
          channel: canary
          force-avd-creation: false
          emulator-boot-timeout: 300
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -logcat-output ${{ github.workspace }}/app/build/reports/avd${{ matrix.api-level }}.log
          disable-animations: true
          script: ./gradlew connectedCheck

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.api-level }}-${{ steps.determine-target.outputs.TARGET }}
          path: |
            **/build/reports/*
            **/build/outputs/*/connected/*
          retention-days: 14
